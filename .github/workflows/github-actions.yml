name: Build and Deploy
on:
  push:
    branches:
      - master

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    env:
      DB_TESTING_URL: ${{ secrets.DB_TESTING_URL }}
      DB_TESTING_USERNAME: ${{ secrets.DB_TESTING_USER_NAME }}
      DB_TESTING_PASSWORD: ${{ secrets.DB_TESTING_PASSWORD }}
      DB_URL: ${{ secrets.DB_MAIN_URL }}
      DB_USERNAME: ${{ secrets.DB_MAIN_USER_NAME }}
      DB_PASSWORD: ${{ secrets.DB_MAIN_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{secrets.DOCKER_HUB_USERNAME}}/test:latest
          build-args: |
            DB_URL=${{ secrets.DB_MAIN_URL }}
            DB_USERNAME=${{ secrets.DB_MAIN_USER_NAME }}
            DB_PASSWORD=${{ secrets.DB_MAIN_PASSWORD }}
            

#  cd:
#    name: CD
#    needs: ci
#    runs-on: self-hosted
#    steps:
#      - name: Pull image from docker hub
#        run: sudo docker pull ${{secrets.DOCKER_HUB_USERNAME}}/test:latest
#
#      - name: Delete old container
#        run: sudo docker rm -f test-container || true
#
#      - name: Run docker container
#        run: sudo docker run -d -p 8080:8080 --name test-container ${{secrets.DOCKER_HUB_USERNAME}}/test:latest










